{"version":3,"sources":["line/line-directive.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,eAAe,SAAS,cAAc;IACzC,OAAO;;AAEX,QAAQ,UALO;IACX,UAAU;IACV,OAAO;QACH,QAAY;QACZ,WAAY;QACZ,WAAY;QACZ,YAAY;QACZ,kBAAoB;QACpB,0BAA8B;QAC9B,gBAAoB;;IAExB,MAAM,SAAA,KAAU,OAAO,SAAS;;QAE5B,IAAI,gBAAgB;;QAIpB,IAAI,iBAAiB;QACrB,IAAI,gBAAA,KAAA;QACJ,IAAI,gBAAA,KAAA;QACJ,IAAI,yBAAA,KAAA;;QAYJ,IAAI,mBAAmB,SAAnB,mBAA8B;;YAE9B,IAAI,aAAa,EAAE,SAAS,MAAM;;YAElC,MAAM,iBAAiB,EAAC,eAAe,eAAe,eAAe,wBAAwB,YAAY;;;QAO7G,IAAI,2BAA2B,SAA3B,2BAAsC;;YAEtC,IAAI,aAAa,EAAE,SAAS,MAAM;;YAElC,MAAM,yBAAyB,EAAC,eAAe,eAAe,eAAe,eAAe,YAAY;;;QAO5G,IAAI,2BAA2B,SAA3B,2BAAsC;;QAW1C,IAAI,iBAAiB,SAAjB,iBAA4B;;YAE5B,IAAI,aAAa,EAAE,SAAS,MAAM;;YAElC,MAAM,eAAe,EAAC,eAAe,eAAe,eAAe,eAAe,YAAY;;;QAelG,MAAM,mBAAmB,UAAS,GAAG,GAAG;;YAEpC,UAAU,GAAG,SAAS,eAAe;gBACjC,MAAM,EAAC,IAAI,GAAG,IAAI;gBAClB,MAAM,OAAO;gBACb,YAAY;;;;QASpB,MAAM,iBAAiB,UAAS,GAAG;;YAE/B,UAAU,GAAG,SAAS,eAAe;gBACjC,MAAM,EAAC,IAAI;gBACX,MAAM,OAAO;gBACb,YAAY;;;;QASpB,MAAM,iBAAiB,UAAS,GAAG;;YAE/B,UAAU,GAAG,SAAS,eAAe;gBACjC,MAAM,EAAC,IAAI;gBACX,MAAM,OAAO;gBACb,YAAY;;;;QAYpB,MAAM,WAAW,UAAS,IAAI,IAAI,IAAI,IAAI;;YAEtC,UAAU,IAAI,SAAS,EAAC,MAAM,EAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;YAC3D,UAAU,GAAG,SAAS,eAAe;gBACjC,MAAM,EAAC,IAAI,IAAI,IAAI;gBACnB,MAAM,OAAO;gBACb,YAAY;;;;QAUpB,MAAM,OAAO,UAAU,UAAS,UAAU,UAAU;;YAEhD,IAAI,CAAC,EAAE,YAAY,WAAW;;gBAE1B,gBAAgB,SAAS;gBACzB,gBAAgB,SAAS;gBACzB,yBAAyB,SAAS;;gBAOlC,IAAI,CAAC,gBAAgB;oBACjB,MAAM,SAAS,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS;oBAC/D,iBAAiB;uBAIhB,IAAI,SAAS,GAAG,OAAO,SAAS,GAAG,MAAM,SAAS,GAAG,OAAO,SAAS,GAAG,IAAI;wBAC7E,MAAM,eAAe,SAAS;2BAI7B,IAAI,SAAS,GAAG,OAAO,SAAS,GAAG,MAAM,SAAS,GAAG,OAAO,SAAS,GAAG,IAAI;4BAC7E,MAAM,iBAAiB,SAAS,IAAI,SAAS;+BAI5C,IAAI,SAAS,GAAG,OAAO,SAAS,GAAG,MAAM,SAAS,GAAG,OAAO,SAAS,GAAG,IAAI;gCAG7E,IAAI,SAAS,GAAG,KAAK,SAAS,GAAG,IAAI;oCACjC,MAAM,iBAAiB,SAAS,IAAI,SAAS;uCAI5C;wCAED,QAAQ,IAAI;;mCAIf,IAAI,SAAS,KAAK,OAAO,SAAS,KAAK,IAAI;oCAC5C,MAAM,eAAe,SAAS;;;WAGvC;;EAhFT","file":"line/line-directive.js","sourcesContent":["export default {\n    restrict: 'A',\n    scope: {\n        coords:     \"=angularSvgNodesLineCoords\",\n        col_index:  \"@angularSvgNodesLineColIndex\",\n        row_index:  \"@angularSvgNodesLineRowIndex\",\n        line_index: \"@angularSvgNodesLineLineIndex\",\n        onRemoveComplete:   \"&angularSvgNodesLineOnRemoveComplete\",\n        onMoveLineTargetComplete:     \"&angularSvgNodesLineonMoveLineTargetComplete\",\n        onDrawComplete:     \"&angularSvgNodesLineOnDrawComplete\"\n    },\n    link: function (scope, element) {\n\n        let ANIM_DURATION = 0.5;\n\n        // control\n\n        let is_initialized = false;\n        let source_coords;\n        let target_coords;\n        let previous_target_coords; // TODO: this feels hacky\n\n        ////////////////////////////////////////////////\n        //\n        // handlers\n        //\n        ////////////////////////////////////////////////\n\n        //----------------------------------\n        // remove complete\n        //----------------------------------\n\n        let onRemoveComplete = function() {\n\n            let line_index = _.parseInt(scope.line_index);\n\n            scope.onRemoveComplete({source_coords: source_coords, target_coords: previous_target_coords, line_index: line_index});\n        };\n\n        //----------------------------------\n        // move line target complete\n        //----------------------------------\n\n        let onMoveLineTargetComplete = function() {\n\n            let line_index = _.parseInt(scope.line_index);\n\n            scope.onMoveLineTargetComplete({source_coords: source_coords, target_coords: target_coords, line_index: line_index});\n        };\n\n        //----------------------------------\n        // move line source complete\n        //----------------------------------\n\n        let onMoveLineSourceComplete = function() {\n\n            // let line_index = _.parseInt(scope.line_index);\n            //\n            // scope.onMoveLineTargetComplete({source_coords: source_coords, target_coords: target_coords, line_index: line_index});\n        };\n\n        //----------------------------------\n        // draw complete\n        //----------------------------------\n\n        let onDrawComplete = function() {\n\n            let line_index = _.parseInt(scope.line_index);\n\n            scope.onDrawComplete({source_coords: source_coords, target_coords: target_coords, line_index: line_index});\n        };\n\n        ////////////////////////////////////////////////\n        //\n        // utils\n        //\n        ////////////////////////////////////////////////\n\n        /**\n         * removeLineTarget\n         *\n         * @param x\n         * @param y\n         */\n        scope.removeLineTarget = function(x, y) {\n\n            TweenLite.to(element, ANIM_DURATION, {\n                attr: {x2: x, y2: y},\n                ease: Power4.easeOut,\n                onComplete: onRemoveComplete\n            });\n        };\n\n        /**\n         * moveLineTarget\n         *\n         * @param x\n         */\n        scope.moveLineTarget = function(x) {\n\n            TweenLite.to(element, ANIM_DURATION, {\n                attr: {x2: x},\n                ease: Power4.easeOut,\n                onComplete: onMoveLineTargetComplete\n            });\n        };\n\n        /**\n         * moveLineSource\n         *\n         * @param x\n         */\n        scope.moveLineSource = function(x) {\n\n            TweenLite.to(element, ANIM_DURATION, {\n                attr: {x1: x},\n                ease: Power4.easeOut,\n                onComplete: onMoveLineSourceComplete\n            });\n        };\n\n        /**\n         * drawLine\n         *\n         * @param x1\n         * @param y1\n         * @param x2\n         * @param y2\n         */\n        scope.drawLine = function(x1, y1, x2, y2) {\n\n            TweenLite.set(element, {attr: {x1: x1, y1: y1, x2: x1, y2: y1}});\n            TweenLite.to(element, ANIM_DURATION, {\n                attr: {x2: x2, y2: y2},\n                ease: Power4.easeOut,\n                onComplete: onDrawComplete\n            });\n        };\n\n        ////////////////////////////////////////////////\n        //\n        // watchers\n        //\n        ////////////////////////////////////////////////\n\n        scope.$watch('coords', function(newValue, oldValue) {\n\n            if (!_.isUndefined(newValue)) {\n\n                source_coords = newValue.from;\n                target_coords = newValue.to;\n                previous_target_coords = newValue.previous_to;\n\n                //console.log(\"COL: \"+oldValue.to[0] +\" === \"+ newValue.to[0]);\n                //console.log(\"ROW: \"+oldValue.to[1] +\" === \"+ newValue.to[1]);\n                //console.log(\"ROW: \"+oldValue.y2 +\" === \"+ newValue.y2);\n\n                // init\n                if (!is_initialized) {\n                    scope.drawLine(newValue.x1, newValue.y1, newValue.x2, newValue.y2);\n                    is_initialized = true;\n                }\n\n                // if only target col coord has changed\n                else if (oldValue.to[1] === newValue.to[1] && oldValue.to[0] !== newValue.to[0]) {\n                    scope.moveLineTarget(newValue.x2);\n                }\n\n                // if only target row coord has changed\n                else if (oldValue.to[0] === newValue.to[0] && oldValue.to[1] !== newValue.to[1]) {\n                    scope.removeLineTarget(newValue.x2, newValue.y2);\n                }\n\n                // if col & row change\n                else if (oldValue.to[1] !== newValue.to[1] && oldValue.to[0] !== newValue.to[0]) {\n\n                    // row decrease\n                    if (newValue.to[1] < oldValue.to[1]) {\n                        scope.removeLineTarget(newValue.x2, newValue.y2);\n                    }\n\n                    // row increase\n                    else {\n                        // ???\n                        console.log(\"row increase\");\n                    }\n                }\n                // if source col change\n                else if (oldValue.from[0] !== newValue.from[0]) {\n                    scope.moveLineSource(newValue.x1);\n                }\n            }\n        }, true);\n\n    }\n};"],"sourceRoot":"src/app/*.js"}